// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model messages {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  body      String
  sentAt    DateTime

  channel        channels @relation(fields: [channelId], references: [id])
  channelId      String
  slackMessageId String?

  slackThreads slackThreads? @relation(fields: [slackThreadId], references: [id])

  slackThreadId String?

  author  users?  @relation(fields: [usersId], references: [id])
  usersId String?
  @@unique([body, sentAt])
}

model slackThreads {
  id            String   @id @default(uuid())
  incrementId   Int      @default(autoincrement())
  channel       channels @relation(fields: [channelId], references: [id])
  slackThreadTs String
  viewCount     Int      @default(0)
  slug          String?
  messageCount  Int      @default(1)

  messages  messages[]
  channelId String

  @@unique([slackThreadTs])
  @@unique([incrementId])
}

model channels {
  id             String     @id @default(uuid())
  channelName    String
  messages       messages[]
  slackChannelId String

  slackThreads        slackThreads[]
  //We should make channel required for channel
  account             accounts?      @relation(fields: [accountId], references: [id])
  accountId           String?
  hidden              Boolean        @default(false)
  slackNextPageCursor String?

  @@unique([slackChannelId])
}

model accounts {
  id             String     @id @default(uuid())
  createdAt      DateTime   @default(now())
  name           String?
  slackDomain    String?
  channels       channels[]
  slackTeamId    String?
  redirectDomain String?
  slackUrl       String?
  brandColor     String?
  homeUrl        String?
  docsUrl        String?

  users               users[]
  slackAuthorizations slackAuthorizations[]
  @@unique([slackTeamId])
}

model auths {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  email     String
  password    String
  salt        String

  @@unique([email])
}

model users {
  id              String     @id @default(uuid())
  messages        messages[]
  slackUserId     String
  displayName     String?
  profileImageUrl String?
  isBot           Boolean
  isAdmin         Boolean

  account    accounts @relation(fields: [accountsId], references: [id])
  accountsId String

  @@unique([slackUserId])
}

model slackAuthorizations {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  accessToken     String
  botUserId       String
  scope           String
  userScope       String?
  authedUserId    String?
  userAccessToken String?

  account    accounts? @relation(fields: [accountsId], references: [id])
  accountsId String?
}
