name: cicd

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'dev/**'
      - '**.md'
      - 'packages/maintenance/**'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  cicd:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: linentest
          POSTGRES_USER: linentest
          POSTGRES_DB: linentest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      typesense:
        image: typesense/typesense:0.25.0
        env: 
          TYPESENSE_API_KEY: xyz
          TYPESENSE_DATA_DIR: /data
        ports:
          - 8108:8108
        volumes:
          - typesense-data:/data

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn migrate:test:db
      - run: yarn test:all
        env: 
          DATABASE_URL: "postgresql://linentest:linentest@localhost:5432/linentest"

      - name: Install Vercel CLI
        run: yarn global add vercel@latest

      - name: Vercel Deploy Production
        if: github.ref == 'refs/heads/main'
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Vercel Preview Production
        if: github.ref != 'refs/heads/main'
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}